# server.port
server.port=8686

# dev tool
spring.devtools.livereload.enabled=true
spring.freemarker.cache=false

##############################################

# H2DB 연결
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console
spring.datasource.url=jdbc:h2:~/local2
spring.datasource.dbcp2.driver-class-name=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=

# JPA Setting
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.H2Dialect
spring.jpa.hibernate.ddl-auto=update
	#update : EntityClass에서 수정된 내용만 업데이트
	#none : EnetityClass가 수정되도 DB에 적용하지 않음
	#validate : 변경사항만 감지
	# create : 서비스 시작시 기존 테이블을 삭제 후 다시 생성
	# create-drop : 서비스 중지시 테이블 삭제.
	##### 개발시에는 update로 설정하고 배포시 none,validate로 설정.

##############################################

# Orale DB 연결
#spring.jpa.database=oracle
#spring.datasource.url=jdbc:oracle:thin:@localhost:1521:xe
#spring.datasource.driverClassName=oracle.jdbc.driver.OracleDriver
#spring.datasource.username=C##HR2
#spring.datasource.password=1234

# JPA Setting
#spring.jpa.database-platform=org.hibernate.dialect.OracleDialect
#spring.jpa.hibernate.ddl-auto=update
	#update : EntityClass에서 수정된 내용만 업데이트
	#none : EnetityClass가 수정되도 DB에 적용하지 않음
	#validate : 변경사항만 감지
	# create : 서비스 시작시 기존 테이블을 삭제 후 다시 생성
	# create-drop : 서비스 중지시 테이블 삭제.
	##### 개발시에는 update로 설정하고 배포시 none,validate로 설정.

##############################################

# JPA method
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.show_sql=true

# Print Query binding Parameter
logging.level.org.hibernate.type.descriptor.sql=trace

# Thymeleaf cache
spring.thymeleaf.cache=false